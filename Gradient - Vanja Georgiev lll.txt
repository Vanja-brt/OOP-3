#include <bits/stdc++.h>
using namespace std;

const int imgLength = 257;
const int imgWidth = 257;
const double imgLength2 = imgLength / 2;
const double imgWidth2 = imgWidth / 2;
const double CentDist = sqrt((imgLength2 * imgLength2) + (imgWidth2 * imgWidth2));
const double ImgTemp = 255 / (CentDist + 2);

struct Pixel {
    int r, g, b;
};

struct RGBImage {
    Pixel image[imgLength][imgWidth];
};

int main() {
    RGBImage img;
    ofstream out("img.ppm");
    for (int i = 0; i < imgLength; i++) {
        for (int j = 0; j < imgWidth; j++) {
            double dist = sqrt((i - imgLength2) * (i - imgLength2) + (j - imgWidth2) * (j - imgWidth2));
            int l = ImgTemp * (CentDist - dist);
            img.image[i][j].r = l%255;
            img.image[i][j].g = 0;
            img.image[i][j].b = l%255;
        }
    }

    out << "P3\n" << imgLength << " " << imgWidth << "\n255\n";
    for (int i = 0; i < imgLength; i++) {
        for (int j = 0; j < imgWidth; j++) {
            out << img.image[i][j].r << " " << img.image[i][j].g << " " << img.image[i][j].b << "\n";
        }
    }
    out << "\n";
}
